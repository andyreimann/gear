Ubershader "GEAR/Default" {
   LocationBindings {
     position ("Vertex Position", vec4) = { POSITION }
   }
   Shader "CG" {
      #VERTEXPROGRAM
      #INCLUDE "G2.matrices"

      // Application to Vertex Shader Data
      struct A2VData
      {
        float4 position : POSITION;
      };
      // Vertex to Fragment Shader Data
      struct V2FData
      {
        float4 position : POSITION;
        float4 color : COLOR;
      };

      V2FData main(A2VData dataIn) 
      {
        float4x4 mvpm = mul(matrices.projection_matrix, matrices.modelview_matrix);
        V2FData dataOut;
        dataOut.position = mul(mvpm, dataIn.position);
        dataOut.color = float4(1,0,0,1);
        return dataOut;
      }
      // ---------------------------------------------------------------
      #FRAGMENTPROGRAM
      #INCLUDE "G2.material"

      struct Data 
      {
        float4 color : COLOR;
      };
      // Vertex to Fragment Shader Data
      struct V2FData
      {
        float4 color : COLOR;
      };

      Data main(V2FData dataIn)
      {
        Data dataOut;
        dataOut.color = dataIn.color;
        return dataOut;
      }
   }
 }