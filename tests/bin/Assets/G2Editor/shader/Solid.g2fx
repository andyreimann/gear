Ubershader "Example/Simple" {
   LocationBindings {
     inPosition ("Vertex Position", vec4) = { POSITION } // define a location binding for incoming vertices
   }
   Shader "GLSL" {
     #VERTEXPROGRAM
       #version 330
       #INCLUDE "G2.matrices" // include GEAR default stuff
       #INCLUDE "G2.material" // include GEAR default stuff
 
       out Data {
           vec4 color;
       } dataOut; // this data will be sent to the fragment program
 
       void main(void) {

           	gl_Position = (g2_projection_matrix * g2_modelview_matrix) * inPosition; // write position of vertex using GEAR default filled matrices
				    dataOut.color = g2_ambient;
       }
     #FRAGMENTPROGRAM
       #version 330

       out vec4 outColor; // here goes the final color
 
       in Data {
           vec4 color;
       } dataIn; // this data comes from the vertex program
 
       void main() {
				  outColor = dataIn.color;
           
       }
   }
 }